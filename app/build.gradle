apply plugin: 'com.android.application'
apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.5' //Use latest version
}
tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

android {
    compileSdkVersion 26
    buildToolsVersion "29.0.2"
    ndkVersion "16.1.4479499"

    defaultConfig {
        applicationId "cz.fmo"
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
                cppFlags "-frtti"
                cppFlags "-fexceptions"
                arguments "-DCMAKE_BUILD_TYPE=Release"
                arguments "-DANDROID_ARM_NEON=TRUE"
                arguments "-DOpenCV_DIR=" + projectDir.getPath() + "/../OpenCV-android-sdk/sdk/native/jni"
            }
        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64' // build for v7 only
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    testOptions {
        animationsDisabled true
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    externalNativeBuild {
        cmake {
            path projectDir.getPath() + "/../fmo-cpp/CMakeLists.txt"
        }
    }
}

sourceSets {
    test {
        java {
            srcDirs = ["src/test/java", "src/androidTest/java"]
        }
    }
}

task copyVideosToEmulator(type: Exec) {
    doFirst {
        commandLine 'adb', 'push', '../recordings/fast_1.mp4', '/storage/emulated/0/DCIM/camera/fast_1.mp4'
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'connectedAndroidTest']) {
    def coverageSourceDirs = [
            "src/main/java"
    ]
    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/Manifest*.*'
    ]
    def javaClasses = fileTree(
            dir: "$buildDir/intermediates/javac/debug/classes",
            excludes: fileFilter
    )
    getClassDirectories().setFrom(files([ javaClasses ]))
    getAdditionalSourceDirs().setFrom(files(coverageSourceDirs))
    getSourceDirectories().setFrom(files(coverageSourceDirs))
    getExecutionData().setFrom(fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code_coverage/debugAndroidTest/connected/*.ec"
    ]))
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:support-v4:26.1.0'
    implementation 'com.otaliastudios:zoomlayout:1.8.0'
    implementation group: 'com.pubnub', name: 'pubnub', version: '3.7.11'
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev110-1.23.0'
    implementation 'com.google.zxing:core:3.2.1'
    implementation project(path: ':opencv_final')
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-core:1.+"
    testImplementation 'org.powermock:powermock-api-mockito:1.6.2'
    testImplementation 'org.powermock:powermock-module-junit4-rule-agent:1.6.2'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.2'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.2'
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
}